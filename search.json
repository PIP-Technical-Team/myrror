[{"path":"https://giorgiacek.github.io/myrror/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 myrror authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_rows.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Extract Different Rows","text":"core, function following: Pairs rows based keys provided (given user using , .x, .y arguments, row number). Pairs columns based column names. Runs comparison shared rows shared columns . Returns rows/observations missing either dfx dfy, variables datasets.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_rows.html","id":"no-keys-provided","dir":"Articles","previous_headings":"Introduction","what":"⚠️ No keys provided","title":"Extract Different Rows","text":"Right now, myrror align rows based row content. means user provide keys, function compare two datasets based row number . can lead incorrect results (extract_diff_row() return correct rows) : datasets different row orders. detaset duplicate rows. dataset new/missing rows. Therefore, suggest user always provide keys running function.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_rows.html","id":"example-1-missing-rows-in-dfy-","dir":"Articles","previous_headings":"","what":"Example 1: missing rows in dfy.","title":"Extract Different Rows","text":"extract_diff_rows(), default options output simple. returns data.table rows missing new. example, compare survey_data dataset modified version, survey_data_4: column df tells user whether row part dfx dfy. case, rows part dfx dataset, missing dfy (survey_data). column df shows value dfx. user runs function output = \"full\", console print user-friendly summary comparison, similar output myrror(). However, given output extract_diff_rows() part myrror object, user need run extract_diff_rows() separately see extracted rows. Following suggestion note, user can extract results. advantage extracting results user can explore manipulate data using additional packages functions. example, extract results display using DT::datatable():","code":"output <- extract_diff_rows(survey_data, survey_data_4, by = c('country', 'year'), output = \"simple\") print(output) #>        df country  year variable1.x variable2.x variable3.x variable4.x #>    <char>  <char> <int>       <num>       <num>       <num>       <num> #> 1:    dfx       A  2010 -0.56047565   0.4978505   0.8951257  0.77996512 #> 2:    dfx       A  2011 -0.23017749  -1.9666172   0.8781335 -0.08336907 #> 3:    dfx       A  2012  1.55870831   0.7013559   0.8215811  0.25331851 #> 4:    dfx       A  2013  0.07050839  -0.4727914   0.6886403 -0.02854676 #>    variable1.y variable2.y variable3.y variable4.y     rn #>          <num>       <num>       <num>       <num> <char> #> 1:          NA          NA          NA          NA      1 #> 2:          NA          NA          NA          NA      2 #> 3:          NA          NA          NA          NA      3 #> 4:          NA          NA          NA          NA      4 # First run the function in full mode: extract_diff_rows(survey_data, survey_data_4, by = c('country', 'year'), output = \"full\") #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: dfx with 16 rows and 6 columns. #> dfy: dfy with 12 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in dfx: 0 () #> ! Non-shared columns in dfy: 0 () #>  #> ✔ Total shared rows: 12 #> ! Non-shared rows in dfx: 4. #> ! Non-shared rows in dfy: 0. #>  #> ℹ Note: run `extract_diff_rows()` to extract the missing/new rows. # Then extract the results and analyse them: extract_diff_rows() |>      datatable(   filter = 'top',   rownames = FALSE,   style = 'auto',   options = list(     searching = FALSE,     paging = TRUE,     scrollX = TRUE,     autoWidth = TRUE,     pageLength = 5   ) ) #> Last myrror object used for comparison."},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_rows.html","id":"example-2-missing-rows-in-dfx-","dir":"Articles","previous_headings":"","what":"Example 2: missing rows in dfx.","title":"Extract Different Rows","text":"Similarly, dfx missing rows, extracted like :","code":"output <- extract_diff_rows(survey_data_4, survey_data, by = c('country', 'year'), interactive = FALSE, output = \"simple\") output |>      datatable(   filter = 'top',   rownames = FALSE,   style = 'auto',   options = list(     searching = FALSE,     paging = TRUE,     scrollX = TRUE,     autoWidth = TRUE,     pageLength = 5   ) )"},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_values.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Extract Different Values","text":"core, functions following: Pair rows based keys provided (given user using , .x, .y arguments, row number). Pair columns based column names. Run comparison shared rows shared columns . extract_diff_values(): returns list data.tables, one per variable, values given variable dfx dfy side--side. extract_diff_table(): returns data.table differences values dfx dfy. article, first cover extract_diff_values() work simple complex type data set. , look extract_diff_table() can add value comparison.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_values.html","id":"no-keys-provided","dir":"Articles","previous_headings":"Introduction","what":"⚠️ No keys provided","title":"Extract Different Values","text":"Right now, myrror align rows based row content. means user provide keys, function compare two datasets based row number . can lead incorrect results (extract_diff_values() return correct rows) : datasets different row orders. detaset duplicate rows. dataset new/missing rows. Therefore, suggest user always provide keys running functions.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_values.html","id":"example-1-one-variable-with-differences-","dir":"Articles","previous_headings":"","what":"Example 1: one variable with differences.","title":"Extract Different Values","text":"run functions arguments output = \"full\" console print user-friendly summary comparison, similar output myrror(), displaying output extract_diff_values().  run default mode, output = \"simple\" , extract_diff_values() returns list data.tables: comparison, survey_data survey_data_2 two data frames differ values variable2 column. output shows values variable variable2 survey_data (dfx) variable2.x survey_data_2 (dfy) variable2.y. column diff identifies type differences two values. case, survey_data, non-matching observations different values. Therefore, column diff shows change_in_value. output can manipulated user explore differences detail.","code":"output <- extract_diff_values(survey_data, survey_data_2, by=c('country', 'year'), output = \"simple\") print(output) #> $variable2 #>                diff indexes country  year variable2.x variable2.y #>              <char>  <char>  <char> <int>       <num>       <num> #>  1: change_in_value       1       A  2010   0.4978505 -1.07179123 #>  2: change_in_value       2       A  2011  -1.9666172  0.30352864 #>  3: change_in_value       3       A  2012   0.7013559  0.44820978 #>  4: change_in_value       4       A  2013  -0.4727914  0.05300423 #>  5: change_in_value       5       A  2014  -1.0678237  0.92226747 #>  6: change_in_value       6       A  2015  -0.2179749  2.05008469 #>  7: change_in_value       7       A  2016  -1.0260044 -0.49103117 #>  8: change_in_value       8       A  2017  -0.7288912 -2.30916888 #>  9: change_in_value       9       B  2010  -0.6250393  1.00573852 #> 10: change_in_value      10       B  2011  -1.6866933 -0.70920076 #> 11: change_in_value      11       B  2012   0.8377870 -0.68800862 #> 12: change_in_value      12       B  2013   0.1533731  1.02557137 #> 13: change_in_value      13       B  2014  -1.1381369 -0.28477301 #> 14: change_in_value      14       B  2015   1.2538149 -1.22071771 #> 15: change_in_value      15       B  2016   0.4264642  0.18130348 #> 16: change_in_value      16       B  2017  -0.2950715 -0.13889136"},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_values.html","id":"example-2-multiple-variables-with-differences-","dir":"Articles","previous_headings":"","what":"Example 2: multiple variables with differences.","title":"Extract Different Values","text":"case two data frames differ multiple variables: time, object returned list data.tables, one variable differs two data frames. look one single variable, can see also different types differences, case value_to_na change_in_value: Let’s assume want focus missing values variable variable2: user can use indexes extract observations dfy:","code":"survey_data_2$variable2[c(1,2,3,4)] <- NA survey_data_2$variable3 <- NA output <- extract_diff_values(survey_data, survey_data_2, by=c('country', 'year'), output = \"simple\") str(output, max.level = 1) #> List of 2 #>  $ variable2:Classes 'data.table' and 'data.frame':  16 obs. of  6 variables: #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>  $ variable3:Classes 'data.table' and 'data.frame':  16 obs. of  6 variables: #>   ..- attr(*, \".internal.selfref\")=<externalptr> output$variable2 |>   group_by(diff)|>   count() #> # A tibble: 2 × 2 #> # Groups:   diff [2] #>   diff                n #>   <chr>           <int> #> 1 change_in_value    12 #> 2 value_to_na         4 output$variable2 |>   filter(diff == \"value_to_na\") #>           diff indexes country  year variable2.x variable2.y #>         <char>  <char>  <char> <int>       <num>       <num> #> 1: value_to_na       1       A  2010   0.4978505          NA #> 2: value_to_na       2       A  2011  -1.9666172          NA #> 3: value_to_na       3       A  2012   0.7013559          NA #> 4: value_to_na       4       A  2013  -0.4727914          NA indexes <- output$variable2 |>   filter(diff == \"value_to_na\") |>   select(indexes)|>   mutate(indexes = as.numeric(indexes))  survey_data_2[c(indexes$indexes), ] #>    country  year   variable1 variable2 variable3   variable4 #>     <char> <int>       <num>     <num>     <num>       <num> #> 1:       A  2010 -0.56047565        NA        NA  0.77996512 #> 2:       A  2011 -0.23017749        NA        NA -0.08336907 #> 3:       A  2012  1.55870831        NA        NA  0.25331851 #> 4:       A  2013  0.07050839        NA        NA -0.02854676"},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_values.html","id":"example-3-a-larger-dataset","dir":"Articles","previous_headings":"","what":"Example 3: a larger dataset","title":"Extract Different Values","text":"example look complex case, using publicly available gapminder dataset. compare gapminder dataset modified version , gapminder_var1: run extract_diff_values() output = \"full\" interactive = TRUE arguments, get full report comparison. Note time, two data sets compared using unique identifiers country year, displayed next indexes extracted rows: Alternatively, run function output = \"simple\" get list data.tables, one per variable differs two data frames: printing structure output, can see differences 3 variables: lifeExp, pop, gdpPercap. user can explore differences detail looking variable: lifeExp differences values year 2007, values NAs: pop differences values country Italy years 1992, difference fixed value: Finally, gdpPercap differences magnitude (10) Colombia. Differences available years, 1952 2007:","code":"gapminder_var1 <- gapminder |>   mutate(lifeExp = ifelse(year == 2007, NA, lifeExp), # NAs in lifeExp for one year          pop = ifelse(country == 'Italy'& year >= 1992, pop + runif(1,1, 10), pop), # Errors in pop          gdpPercap = ifelse(country == 'Colombia', gdpPercap/10, gdpPercap)) # Errors in gdpPercap output <- extract_diff_values(gapminder, gapminder_var1, by=c('country', 'year'), output = \"simple\") str(output, max.level = 2) #> List of 3 #>  $ lifeExp  :Classes 'data.table' and 'data.frame':  142 obs. of  6 variables: #>   ..$ diff     : chr [1:142] \"value_to_na\" \"value_to_na\" \"value_to_na\" \"value_to_na\" ... #>   ..$ indexes  : chr [1:142] \"12\" \"24\" \"36\" \"48\" ... #>   ..$ country  : chr [1:142] \"Afghanistan\" \"Albania\" \"Algeria\" \"Angola\" ... #>   ..$ year     : int [1:142] 2007 2007 2007 2007 2007 2007 2007 2007 2007 2007 ... #>   ..$ lifeExp.x: num [1:142] 43.8 76.4 72.3 42.7 75.3 ... #>   ..$ lifeExp.y: num [1:142] NA NA NA NA NA NA NA NA NA NA ... #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>  $ pop      :Classes 'data.table' and 'data.frame':  4 obs. of  6 variables: #>   ..$ diff   : chr [1:4] \"change_in_value\" \"change_in_value\" \"change_in_value\" \"change_in_value\" #>   ..$ indexes: chr [1:4] \"777\" \"778\" \"779\" \"780\" #>   ..$ country: chr [1:4] \"Italy\" \"Italy\" \"Italy\" \"Italy\" #>   ..$ year   : int [1:4] 1992 1997 2002 2007 #>   ..$ pop.x  : int [1:4] 56840847 57479469 57926999 58147733 #>   ..$ pop.y  : num [1:4] 56840849 57479471 57927001 58147735 #>   ..- attr(*, \".internal.selfref\")=<externalptr>  #>  $ gdpPercap:Classes 'data.table' and 'data.frame':  12 obs. of  6 variables: #>   ..$ diff       : chr [1:12] \"change_in_value\" \"change_in_value\" \"change_in_value\" \"change_in_value\" ... #>   ..$ indexes    : chr [1:12] \"301\" \"302\" \"303\" \"304\" ... #>   ..$ country    : chr [1:12] \"Colombia\" \"Colombia\" \"Colombia\" \"Colombia\" ... #>   ..$ year       : int [1:12] 1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ... #>   ..$ gdpPercap.x: num [1:12] 2144 2324 2492 2679 3265 ... #>   ..$ gdpPercap.y: num [1:12] 214 232 249 268 326 ... #>   ..- attr(*, \".internal.selfref\")=<externalptr> output$lifeExp |>   group_by(diff, year)|>   count() #> # A tibble: 1 × 3 #> # Groups:   diff, year [1] #>   diff         year     n #>   <chr>       <int> <int> #> 1 value_to_na  2007   142 output$pop |>   group_by(diff, country, year)|>   count() #> # A tibble: 4 × 4 #> # Groups:   diff, country, year [4] #>   diff            country  year     n #>   <chr>           <chr>   <int> <int> #> 1 change_in_value Italy    1992     1 #> 2 change_in_value Italy    1997     1 #> 3 change_in_value Italy    2002     1 #> 4 change_in_value Italy    2007     1 output$pop |>   mutate(pop_diff = pop.x - pop.y) |>   select(country, year, pop_diff) #>    country  year  pop_diff #>     <char> <int>     <num> #> 1:   Italy  1992 -1.726751 #> 2:   Italy  1997 -1.726751 #> 3:   Italy  2002 -1.726751 #> 4:   Italy  2007 -1.726751 output$gdpPercap |>   group_by(diff, country) |>   count() #> # A tibble: 1 × 3 #> # Groups:   diff, country [1] #>   diff            country      n #>   <chr>           <chr>    <int> #> 1 change_in_value Colombia    12 output$gdpPercap |>   mutate(gdpPercap_ratio = gdpPercap.x/gdpPercap.y)|>   select(country, year, gdpPercap_ratio)|>   head() #>     country  year gdpPercap_ratio #>      <char> <int>           <num> #> 1: Colombia  1952              10 #> 2: Colombia  1957              10 #> 3: Colombia  1962              10 #> 4: Colombia  1967              10 #> 5: Colombia  1972              10 #> 6: Colombia  1977              10"},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_values.html","id":"extracting-the-differences-in-a-table-format","dir":"Articles","previous_headings":"","what":"Extracting the differences in a table format","title":"Extract Different Values","text":"function extract_diff_table() can used extract differences table format. function useful user wants see differences values variables. output data.table rows (observations) least one difference variable. row differences multiple variables, displayed multiple times, one per difference. user can filter table focus specific differences, aggregate summarize table understand general patterns, use indexes extract rows original data frame. example:","code":"extract_diff_table(gapminder, gapminder_var1, by=c('country', 'year')) |>   datatable(   filter = 'top',   rownames = FALSE,   style = 'auto',   options = list(     searching = FALSE,     paging = TRUE,     scrollX = TRUE,     autoWidth = TRUE,     pageLength = 5   ) ) extract_diff_table(gapminder, gapminder_var1, by=c('country', 'year')) |>   group_by(diff, country) |>   count() #> # A tibble: 144 × 3 #> # Groups:   diff, country [144] #>    diff            country         n #>    <chr>           <chr>       <int> #>  1 change_in_value Colombia       12 #>  2 change_in_value Italy           4 #>  3 value_to_na     Afghanistan     1 #>  4 value_to_na     Albania         1 #>  5 value_to_na     Algeria         1 #>  6 value_to_na     Angola          1 #>  7 value_to_na     Argentina       1 #>  8 value_to_na     Australia       1 #>  9 value_to_na     Austria         1 #> 10 value_to_na     Bahrain         1 #> # ℹ 134 more rows"},{"path":"https://giorgiacek.github.io/myrror/articles/extract_diff_values.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Extract Different Values","text":"recap: extract_diff_values() /extract_diff_table()function allows user extract differences values two data frames list/data.table format. can run output = \"full\" get full report differences. Interactivity can switched setting interactive = FALSE. can run output = \"simple\" get list data.tables, one per variable differs two data frames.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"myrror","text":"myrror package helps compare two data frames. three types functions: Complete comparison: myrror(), “workhorse” function go complete comparison two datastes. Partial comparison: compare_type(): Compares types columns two data frames. compare_values(): Compares values columns two data frames. Extract differences: two functions allow access rows differ values two data frames. extract_diff_values(): Returns differences list format, one table per variable. extract_diff_table(): Returns differences table format, variables. functions, results displayed interactively console. ALternatively, user option return results object use analysis.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror.html","id":"workflow-example-1","dir":"Articles","previous_headings":"","what":"Workflow Example 1","title":"myrror","text":"One use case package check whether two versions dataset discrepancies. , objective myrror help user quickly identify variables, values observations different. example, compare one simulated dataset survey_data second version, survey_data_2. row uniquely identified two variables, country year: second dataset just variation first one: clearly different values variable2: myrror() helps user diagnosing difference. get complete report differences survey_data survey_data_2 user can run: setting argument, user can specify unique keys identify row. useful user wants compare two datasets structure different order number rows. user identifies differences, can use extract_diff_values() function extract rows differ values two data frames: function extract_diff_values() operates comparison object created myrror() stored environment. user wants extract differences different comparison, one can simply re-run extract_diff_values() appropriate arguments, example:","code":"survey_data #>     country  year   variable1  variable2   variable3   variable4 #>      <char> <int>       <num>      <num>       <num>       <num> #>  1:       A  2010 -0.56047565  0.4978505  0.89512566  0.77996512 #>  2:       A  2011 -0.23017749 -1.9666172  0.87813349 -0.08336907 #>  3:       A  2012  1.55870831  0.7013559  0.82158108  0.25331851 #>  4:       A  2013  0.07050839 -0.4727914  0.68864025 -0.02854676 #>  5:       A  2014  0.12928774 -1.0678237  0.55391765 -0.04287046 #>  6:       A  2015  1.71506499 -0.2179749 -0.06191171  1.36860228 #>  7:       A  2016  0.46091621 -1.0260044 -0.30596266 -0.22577099 #>  8:       A  2017 -1.26506123 -0.7288912 -0.38047100  1.51647060 #>  9:       B  2010 -0.68685285 -0.6250393 -0.69470698 -1.54875280 #> 10:       B  2011 -0.44566197 -1.6866933 -0.20791728  0.58461375 #> 11:       B  2012  1.22408180  0.8377870 -1.26539635  0.12385424 #> 12:       B  2013  0.35981383  0.1533731  2.16895597  0.21594157 #> 13:       B  2014  0.40077145 -1.1381369  1.20796200  0.37963948 #> 14:       B  2015  0.11068272  1.2538149 -1.12310858 -0.50232345 #> 15:       B  2016 -0.55584113  0.4264642 -0.40288484 -0.33320738 #> 16:       B  2017  1.78691314 -0.2950715 -0.46665535 -1.01857538 survey_data_2 #>     country  year   variable1   variable2   variable3   variable4 #>      <char> <int>       <num>       <num>       <num>       <num> #>  1:       A  2010 -0.56047565 -1.07179123  0.89512566  0.77996512 #>  2:       A  2011 -0.23017749  0.30352864  0.87813349 -0.08336907 #>  3:       A  2012  1.55870831  0.44820978  0.82158108  0.25331851 #>  4:       A  2013  0.07050839  0.05300423  0.68864025 -0.02854676 #>  5:       A  2014  0.12928774  0.92226747  0.55391765 -0.04287046 #>  6:       A  2015  1.71506499  2.05008469 -0.06191171  1.36860228 #>  7:       A  2016  0.46091621 -0.49103117 -0.30596266 -0.22577099 #>  8:       A  2017 -1.26506123 -2.30916888 -0.38047100  1.51647060 #>  9:       B  2010 -0.68685285  1.00573852 -0.69470698 -1.54875280 #> 10:       B  2011 -0.44566197 -0.70920076 -0.20791728  0.58461375 #> 11:       B  2012  1.22408180 -0.68800862 -1.26539635  0.12385424 #> 12:       B  2013  0.35981383  1.02557137  2.16895597  0.21594157 #> 13:       B  2014  0.40077145 -0.28477301  1.20796200  0.37963948 #> 14:       B  2015  0.11068272 -1.22071771 -1.12310858 -0.50232345 #> 15:       B  2016 -0.55584113  0.18130348 -0.40288484 -0.33320738 #> 16:       B  2017  1.78691314 -0.13889136 -0.46665535 -1.01857538 all.equal(survey_data, survey_data_2) #> [1] \"Column 'variable2': Mean relative difference: 1.506422\" myrror(survey_data, survey_data_2,         by = c(\"country\", \"year\"))  #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #> ── Overview: ── #>  #>    variable change_in_value na_to_value value_to_na #> 1 variable2              16           0           0 #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\" #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report. extract_diff_values() #> Last myrror object used for comparison. #> $variable2 #>                diff indexes country  year variable2.x variable2.y #>              <char>  <char>  <char> <int>       <num>       <num> #>  1: change_in_value       1       A  2010   0.4978505 -1.07179123 #>  2: change_in_value       2       A  2011  -1.9666172  0.30352864 #>  3: change_in_value       3       A  2012   0.7013559  0.44820978 #>  4: change_in_value       4       A  2013  -0.4727914  0.05300423 #>  5: change_in_value       5       A  2014  -1.0678237  0.92226747 #>  6: change_in_value       6       A  2015  -0.2179749  2.05008469 #>  7: change_in_value       7       A  2016  -1.0260044 -0.49103117 #>  8: change_in_value       8       A  2017  -0.7288912 -2.30916888 #>  9: change_in_value       9       B  2010  -0.6250393  1.00573852 #> 10: change_in_value      10       B  2011  -1.6866933 -0.70920076 #> 11: change_in_value      11       B  2012   0.8377870 -0.68800862 #> 12: change_in_value      12       B  2013   0.1533731  1.02557137 #> 13: change_in_value      13       B  2014  -1.1381369 -0.28477301 #> 14: change_in_value      14       B  2015   1.2538149 -1.22071771 #> 15: change_in_value      15       B  2016   0.4264642  0.18130348 #> 16: change_in_value      16       B  2017  -0.2950715 -0.13889136 extract_diff_values(survey_data, survey_data_2,                      by = c(\"country\", \"year\")) #> $variable2 #>                diff indexes country  year variable2.x variable2.y #>              <char>  <char>  <char> <int>       <num>       <num> #>  1: change_in_value       1       A  2010   0.4978505 -1.07179123 #>  2: change_in_value       2       A  2011  -1.9666172  0.30352864 #>  3: change_in_value       3       A  2012   0.7013559  0.44820978 #>  4: change_in_value       4       A  2013  -0.4727914  0.05300423 #>  5: change_in_value       5       A  2014  -1.0678237  0.92226747 #>  6: change_in_value       6       A  2015  -0.2179749  2.05008469 #>  7: change_in_value       7       A  2016  -1.0260044 -0.49103117 #>  8: change_in_value       8       A  2017  -0.7288912 -2.30916888 #>  9: change_in_value       9       B  2010  -0.6250393  1.00573852 #> 10: change_in_value      10       B  2011  -1.6866933 -0.70920076 #> 11: change_in_value      11       B  2012   0.8377870 -0.68800862 #> 12: change_in_value      12       B  2013   0.1533731  1.02557137 #> 13: change_in_value      13       B  2014  -1.1381369 -0.28477301 #> 14: change_in_value      14       B  2015   1.2538149 -1.22071771 #> 15: change_in_value      15       B  2016   0.4264642  0.18130348 #> 16: change_in_value      16       B  2017  -0.2950715 -0.13889136"},{"path":"https://giorgiacek.github.io/myrror/articles/myrror.html","id":"workflow-example-2","dir":"Articles","previous_headings":"","what":"Workflow Example 2","title":"myrror","text":", want compare two datasets: survey_data survey_data_4: two datasets different number rows. myrror() can help identifying different number rows, also providing complete report differences two datasets. user can extract rows missing one two datasets:","code":"all.equal(survey_data, survey_data_4) #> [1] \"Different number of rows\" extract_diff_rows(survey_data, survey_data_4,                    by=c(\"country\", \"year\")) #>        df country  year variable1.x variable2.x variable3.x variable4.x #>    <char>  <char> <int>       <num>       <num>       <num>       <num> #> 1:    dfx       A  2010 -0.56047565   0.4978505   0.8951257  0.77996512 #> 2:    dfx       A  2011 -0.23017749  -1.9666172   0.8781335 -0.08336907 #> 3:    dfx       A  2012  1.55870831   0.7013559   0.8215811  0.25331851 #> 4:    dfx       A  2013  0.07050839  -0.4727914   0.6886403 -0.02854676 #>    variable1.y variable2.y variable3.y variable4.y     rn #>          <num>       <num>       <num>       <num> <char> #> 1:          NA          NA          NA          NA      1 #> 2:          NA          NA          NA          NA      2 #> 3:          NA          NA          NA          NA      3 #> 4:          NA          NA          NA          NA      4"},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_flow.html","id":"with-keys-supplied","dir":"Articles","previous_headings":"","what":"With keys supplied","title":"Myrror Process Flow","text":"keys (.x .y) supplied user, myrror() first check whether keys uniquely identify dataset:","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_flow.html","id":"identified","dir":"Articles","previous_headings":"With keys supplied","what":"Identified","title":"Myrror Process Flow","text":"keys supplied uniquely identify dataset, myrror() proceed joining two datasets keys: 1:1 relationship two datasets 1:1, myrror() proceed comparing values matched row. m:1, 1:m relationship two datasets 1:1 (.e. multiple rows one dataset match single row dataset), myrror() ask user whether want proceed. user chooses proceed, myrror() join two datasets keys compare values matched row. m:m relationship two datasets m:m, myrror() abort comparison default.","code":"myrror(survey_data, survey_data_3, by = c(\"country\", \"year\"), interactive = FALSE) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_3 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_3: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_3: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ! 1 shared column(s) have different class(es): #>  #>     variable class_x   class_y #>       <char>  <char>    <char> #> 1: variable1 numeric character #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ✔ All shared columns have the same values. #>  #> ✔ All shared columns have the same values. #>  #> ✔ End of Myrror Report. myrror(survey_data, survey_data_1m, by = c(\"country\", \"year\"), interactive = FALSE) #> ! The by keys provided (\"country\" and \"year\") do not uniquely identify the dataset (survey_data_1m). #> ! Proceeding with the operation despite non-unique identification. #> ! When comparing the data, the join is 1:m between survey_data and survey_data_1m. #>  #> ── Identification Report: ── #>  #> Only first 5 keys shown: #>  #>    country   year copies.dfx percent.dfx copies.dfy percent.dfy #>     <char> <char>      <int>      <char>      <int>      <char> #> 1:       A   2010          1        6.2%          3        8.3% #> 2:       B   2010          1        6.2%          1        2.8% #> 3:       A   2011          1        6.2%          2        5.6% #> 4:       B   2011          1        6.2%          2        5.6% #> 5:       A   2012          1        6.2%          2        5.6% #> ... #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_1m with 36 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_1m: 0 () #>  #> ✔ Total shared rows: 36 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_1m: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 3 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #> ── Overview: ── #>  #>    variable change_in_value na_to_value value_to_na #> 1 variable1              36           0           0 #> 2 variable2              36           0           0 #> 3 variable3              36           0           0 #>  #> ── Value comparison: ── #>  #> ! 3 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable1\" #>               diff indexes country  year variable1.x variable1.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010  -0.5604756  -0.4750861 #> 2: change_in_value       1       A  2010  -0.5604756  -0.4750861 #> 3: change_in_value       1       A  2010  -0.5604756  -0.4750861 #> 4: change_in_value       2       A  2011  -0.2301775  -0.1511585 #> 5: change_in_value       2       A  2011  -0.2301775  -0.1511585 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ── \"variable2\" #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505   0.4889819 #> 2: change_in_value       1       A  2010   0.4978505   0.4889819 #> 3: change_in_value       1       A  2010   0.4978505   0.4889819 #> 4: change_in_value       2       A  2011  -1.9666172  -2.1479705 #> 5: change_in_value       2       A  2011  -1.9666172  -2.1479705 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ── \"variable3\" #>               diff indexes country  year variable3.x variable3.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.8951257   0.9687451 #> 2: change_in_value       1       A  2010   0.8951257   0.9687451 #> 3: change_in_value       1       A  2010   0.8951257   0.9687451 #> 4: change_in_value       2       A  2011   0.8781335   1.1156799 #> 5: change_in_value       2       A  2011   0.8781335   1.1156799 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report. myrror(survey_data_1m_2, survey_data_1m, by = c(\"country\", \"year\"), interactive = FALSE) #> ! The by keys provided (\"country\" and \"year\") do not uniquely identify the dataset (survey_data_1m_2). #> ! Proceeding with the operation despite non-unique identification. #> ! The by keys provided (\"country\" and \"year\") do not uniquely identify the dataset (survey_data_1m). #> ! Proceeding with the operation despite non-unique identification. #> Error: #> ✖ When comparing the datasets, the join is m:m between survey_data_1m_2 #>   and survey_data_1m. #> ℹ The comparison will stop here."},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_flow.html","id":"non-identified","dir":"Articles","previous_headings":"With keys supplied","what":"Non-Identified","title":"Myrror Process Flow","text":"keys supplied uniquely identify dataset, myrror() inform user ask whether want proceed: m:1, 1:m , relationship two datasets 1:1, myrror() ask user whether want proceed. user chooses proceed, myrror() join two datasets keys compare values matched row. m:m relationship two datasets m:m, myrror() abort comparison. proceed user chooses proceed, myrror() abort comparison.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_flow.html","id":"without-keys-supplied","dir":"Articles","previous_headings":"","what":"Without keys supplied","title":"Myrror Process Flow","text":"Currently, myrror align rows based row content (e.g. waldo). means user provide keys, function compare two datasets based row number . might expect, can lead incorrect result, especially discrepancies number rows. series warning make user consider whether sensible proceed.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_flow.html","id":"different-number-of-rows","dir":"Articles","previous_headings":"Without keys supplied","what":"Different Number of Rows","title":"Myrror Process Flow","text":"default, keys supplied, different number rows, comparison aborted:","code":"myrror(survey_data, survey_data_4, interactive = FALSE) #> Error: #> ✖ Different row numbers and no keys supplied. #> ℹ The comparison will be aborted."},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_flow.html","id":"same-number-of-rows","dir":"Articles","previous_headings":"Without keys supplied","what":"Same Number of Rows","title":"Myrror Process Flow","text":"keys supplied, number rows, dataset identified (duplicates):","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_flow.html","id":"identified-1","dir":"Articles","previous_headings":"Without keys supplied > Same Number of Rows","what":"Identified","title":"Myrror Process Flow","text":"Possible Keys Found First, myrror() try suggest two possible keys combinations keys. proceed combining two dataset row numbers. Keys Found keys found, myrror() proceed combining two dataset row numbers.","code":"myrror(survey_data, survey_data_2, interactive = FALSE) #> ℹ No keys supplied, but possible keys found in both datasets. #> ℹ Possible keys found in survey_data: variable1 and c(\"country\", \"year\") #> ℹ Possible keys found in survey_data_2: variable1 and c(\"country\", \"year\") #> ℹ Consider using these keys for the comparison. The comparison will go ahead using row numbers. #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: rn. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 6 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #> ── Overview: ── #>  #> # A data frame: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\" #>               diff indexes     rn variable2.x variable2.y #>             <char>  <char> <char>       <num>       <num> #> 1: change_in_value       1      1   0.4978505  -1.0717912 #> 2: change_in_value      10     10  -1.6866933  -0.7092008 #> 3: change_in_value      11     11   0.8377870  -0.6880086 #> 4: change_in_value      12     12   0.1533731   1.0255714 #> 5: change_in_value      13     13  -1.1381369  -0.2847730 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report."},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_flow.html","id":"non-identified-1","dir":"Articles","previous_headings":"Without keys supplied","what":"Non-Identified","title":"Myrror Process Flow","text":"keys supplied, number rows, dataset identified (duplicates), myrror() inform user ask whether want proceed, user chooses proceed, myrror() join two datasets row number.","code":"row_to_duplicate <- sample(nrow(survey_data), 1) survey_data_copy <- rbind(survey_data, survey_data[row_to_duplicate, ]) row_to_remove <- sample(setdiff(1:nrow(survey_data_copy), row_to_duplicate), 1) survey_data_copy <- survey_data_copy[-row_to_remove, ]  myrror(survey_data, survey_data_copy, interactive = FALSE) #> ! There are duplicates in the dataset (survey_data_copy). #> ! Proceeding with the operation despite non-unique rows. #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_copy with 16 rows and 6 columns. #> keys: rn. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 6 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_copy: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_copy: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 6 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #> ── Overview: ── #>  #> # A data frame: 6 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 country                 1           0           0 #> 2 year                   10           0           0 #> 3 variable1              10           0           0 #> 4 variable2              10           0           0 #> 5 variable3              10           0           0 #> 6 variable4              10           0           0 #>  #> ── Value comparison: ── #>  #> ! 6 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"country\" #>               diff indexes     rn country.x country.y #>             <char>  <char> <char>    <char>    <char> #> 1: change_in_value       8      8         A         B #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ── \"year\" #>               diff indexes     rn year.x year.y #>             <char>  <char> <char>  <int>  <int> #> 1: change_in_value      10     10   2011   2012 #> 2: change_in_value      11     11   2012   2013 #> 3: change_in_value      12     12   2013   2014 #> 4: change_in_value      13     13   2014   2015 #> 5: change_in_value      14     14   2015   2016 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ── \"variable1\" #>               diff indexes     rn variable1.x variable1.y #>             <char>  <char> <char>       <num>       <num> #> 1: change_in_value      10     10  -0.4456620   1.2240818 #> 2: change_in_value      11     11   1.2240818   0.3598138 #> 3: change_in_value      12     12   0.3598138   0.4007715 #> 4: change_in_value      13     13   0.4007715   0.1106827 #> 5: change_in_value      14     14   0.1106827  -0.5558411 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ── \"variable2\" #>               diff indexes     rn variable2.x variable2.y #>             <char>  <char> <char>       <num>       <num> #> 1: change_in_value      10     10  -1.6866933   0.8377870 #> 2: change_in_value      11     11   0.8377870   0.1533731 #> 3: change_in_value      12     12   0.1533731  -1.1381369 #> 4: change_in_value      13     13  -1.1381369   1.2538149 #> 5: change_in_value      14     14   1.2538149   0.4264642 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ── \"variable3\" #>               diff indexes     rn variable3.x variable3.y #>             <char>  <char> <char>       <num>       <num> #> 1: change_in_value      10     10  -0.2079173  -1.2653964 #> 2: change_in_value      11     11  -1.2653964   2.1689560 #> 3: change_in_value      12     12   2.1689560   1.2079620 #> 4: change_in_value      13     13   1.2079620  -1.1231086 #> 5: change_in_value      14     14  -1.1231086  -0.4028848 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ── \"variable4\" #>               diff indexes     rn variable4.x variable4.y #>             <char>  <char> <char>       <num>       <num> #> 1: change_in_value      10     10   0.5846137   0.1238542 #> 2: change_in_value      11     11   0.1238542   0.2159416 #> 3: change_in_value      12     12   0.2159416   0.3796395 #> 4: change_in_value      13     13   0.3796395  -0.5023235 #> 5: change_in_value      14     14  -0.5023235  -0.3332074 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report."},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_overview.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Myrror Overview","text":"article give complete overview function myrror(). go main steps comparison, show use auxiliary functions extract differences two data frames. first example, look case datasets identified: means user supplied set keys align rows two data frames. second example, look case datasets identified: means user-supplied keys uniquely identify rows two data frames.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_overview.html","id":"identified-data","dir":"Articles","previous_headings":"","what":"Identified Data","title":"Myrror Overview","text":"first comparison, use survey_data survey_data_all datasets. survey_data_all variation survey_data contains possible issues can arise comparison: differences values, variable change class, different number columns, different number rows. Additionally, two datasets different keys names, can supplied function like : running function interactive mode, user fo screen:","code":"myrror(survey_data, survey_data_all, by = c('country' = \"COUNTRY\", \"year\" = \"YEAR\"),        interactive = TRUE)"},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_overview.html","id":"general-overview","dir":"Articles","previous_headings":"Identified Data","what":"General Overview","title":"Myrror Overview","text":"first part myrror() report shows general characteristics two dataframes, including number rows columns, keys used comparison (argument) , whether missing rows columns, , number name: end general overview, ℹ️ Note suggests user run extract_diff_rows() see differences number rows. function article Extract Different Rows.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_overview.html","id":"compare-type","dir":"Articles","previous_headings":"Identified Data","what":"Compare Type","title":"Myrror Overview","text":"second part report shows whether columns different types:","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_overview.html","id":"compare-values","dir":"Articles","previous_headings":"Identified Data","what":"Compare Values","title":"Myrror Overview","text":"Next, report shows differences values two data frames. user can see summary many values different variable, type difference present (change value, value NA, NA value):","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_overview.html","id":"extract-differences","dir":"Articles","previous_headings":"Identified Data","what":"Extract Differences","title":"Myrror Overview","text":"Finally, user can better look differences variable variable:  suggested ℹ️ Note, user can run extract_diff_values()/extract_diff_table see differences list table format. functions articles Extract Different Values.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_overview.html","id":"non-identified-data","dir":"Articles","previous_headings":"","what":"Non-Identified Data","title":"Myrror Overview","text":"second comparison, use survey_data survey_data_1m datasets. survey_data_1m variation survey_data keys country year uniquely identify rows two data frames. user warned issue asked whether proceed comparison:","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_overview.html","id":"warning-1-not-identified-","dir":"Articles","previous_headings":"Non-Identified Data","what":"Warning 1: not identified.","title":"Myrror Overview","text":"one two data frames identified, user warned issue: warning repeated data frames identified.","code":""},{"path":"https://giorgiacek.github.io/myrror/articles/myrror_overview.html","id":"warning-2-1m-match-","dir":"Articles","previous_headings":"Non-Identified Data","what":"Warning 2: 1:m match.","title":"Myrror Overview","text":"user decides proceed comparison, myrror() goes second check. match dfx dfy 1:1 (either 1:m m:1), user warned issue:  Note match m:m, comparison aborted default. series warnings, comparison proceeds . , want re-iterate case non-identified datasets, comparison done row number (rn). means row alignment based position within dataset, content row, might result myrror() reporting discrepancies rows aligned based row content. also always suggest user provide keys, possible.","code":""},{"path":"https://giorgiacek.github.io/myrror/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Giorgia Cecchinato. Author, maintainer.","code":""},{"path":"https://giorgiacek.github.io/myrror/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cecchinato G (2025). myrror: Compare two Data Frames Summarize Differences. R package version 0.0.0.9001, https://giorgiacek.github.io/myrror/.","code":"@Manual{,   title = {myrror: Compare two Data Frames and Summarize Differences},   author = {Giorgia Cecchinato},   year = {2025},   note = {R package version 0.0.0.9001},   url = {https://giorgiacek.github.io/myrror/}, }"},{"path":"https://giorgiacek.github.io/myrror/index.html","id":"myrror","dir":"","previous_headings":"","what":"Compare two Data Frames and Summarize Differences","title":"Compare two Data Frames and Summarize Differences","text":"R package compare data frames R. assumption user wants two data frames . myrror() highlights differences values. difference, comparison “successful”.","code":""},{"path":"https://giorgiacek.github.io/myrror/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Compare two Data Frames and Summarize Differences","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"giorgiacek/myrror\")"},{"path":"https://giorgiacek.github.io/myrror/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Compare two Data Frames and Summarize Differences","text":"main function myrror(), goes single step comparison:","code":"library(myrror) myrror(iris, iris_var1) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: iris with 150 rows and 5 columns. #> dfy: iris_var1 with 155 rows and 6 columns. #> Keys: rn. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 5 #> ! Non-shared columns in iris: 0 () #> ! Non-shared columns in iris_var1: 1 (Petal.Area) #>  #> ✔ Total shared rows: 150 #> ! Non-shared rows in iris: 0. #> ! Non-shared rows in iris_var1: 5. #>  #> ℹ Note: run `extract_diff_rows()` to extract the missing/new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable     change_in_value na_to_value value_to_na #>   <fct>                  <int>       <int>       <int> #> 1 Sepal.Length               0           0           5 #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #>  #> ── Sepal.Length #>           diff indexes     rn Sepal.Length.x Sepal.Length.y #>         <char>  <char> <char>          <num>          <num> #> 1: value_to_na     104    104            6.3             NA #> 2: value_to_na     125    125            6.7             NA #> 3: value_to_na      67     67            5.6             NA #> 4: value_to_na      80     80            5.7             NA #> 5: value_to_na      96     96            5.7             NA #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report."},{"path":"https://giorgiacek.github.io/myrror/index.html","id":"auxiliary-functions","dir":"","previous_headings":"","what":"Auxiliary functions","title":"Compare two Data Frames and Summarize Differences","text":"auxiliary functions go specific step comparison, can used independently: compare_type(): compares type shared columns. compare_values(): compares values shared columns. extract_diff_values(): extract values different two data frames, returns list data frames differences, one variable. extract_diff_table(): extract values different two data frames, returns data.table differences. See Get started vignette.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/check_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the df arguments are valid, makes them into a data.frame if they are a list. Internal function. — check_df","title":"Check if the df arguments are valid, makes them into a data.frame if they are a list. Internal function. — check_df","text":"Check df arguments valid, makes data.frame list. Internal function.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/check_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the df arguments are valid, makes them into a data.frame if they are a list. Internal function. — check_df","text":"","code":"check_df(df)"},{"path":"https://giorgiacek.github.io/myrror/reference/check_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the df arguments are valid, makes them into a data.frame if they are a list. Internal function. — check_df","text":"df data frame","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/check_join_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Check join type. Internal function. — check_join_type","title":"Check join type. Internal function. — check_join_type","text":"function checks join type two data frames. Internal function. returns type match two data frames (\"1:1\", \"1:m\", \"m:1\", \"m:m\"), identified non-identified rows.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/check_join_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check join type. Internal function. — check_join_type","text":"","code":"check_join_type(dfx, dfy, by.x, by.y, return_match = FALSE)"},{"path":"https://giorgiacek.github.io/myrror/reference/check_join_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check join type. Internal function. — check_join_type","text":"dfx data.frame dfy data.frame .x character vector, keys .y. .y character vector, keys .x. return_match logical, default FALSE.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/check_join_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check join type. Internal function. — check_join_type","text":"character/list depending return_match FALSE/TRUE.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/check_set_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the by arguments are valid, makes them into a data.frame if they are a list. Internal function. — check_set_by","title":"Check if the by arguments are valid, makes them into a data.frame if they are a list. Internal function. — check_set_by","text":"Check arguments valid, makes data.frame list. Internal function.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/check_set_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the by arguments are valid, makes them into a data.frame if they are a list. Internal function. — check_set_by","text":"","code":"check_set_by(by = NULL, by.x = NULL, by.y = NULL)"},{"path":"https://giorgiacek.github.io/myrror/reference/check_set_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the by arguments are valid, makes them into a data.frame if they are a list. Internal function. — check_set_by","text":"character vector .x character vector .y character vector","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/check_set_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the by arguments are valid, makes them into a data.frame if they are a list. Internal function. — check_set_by","text":"","code":"#check_set_by(NULL, NULL, NULL) # rn set #check_set_by(\"id\", NULL, NULL) # by set #check_set_by(NULL, \"id\", \"id\") # by.x and by.y set"},{"path":"https://giorgiacek.github.io/myrror/reference/clear_last_myrror_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear last myrror object. Internal Function. — clear_last_myrror_object","title":"Clear last myrror object. Internal Function. — clear_last_myrror_object","text":"function unbinds last myrror object package-specific environment, effectively removing .","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/clear_last_myrror_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear last myrror object. Internal Function. — clear_last_myrror_object","text":"","code":"clear_last_myrror_object()"},{"path":"https://giorgiacek.github.io/myrror/reference/clear_last_myrror_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear last myrror object. Internal Function. — clear_last_myrror_object","text":"Invisible NULL, indicating object successfully cleared.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/clear_last_myrror_object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear last myrror object. Internal Function. — clear_last_myrror_object","text":"","code":"# myrror(iris, iris_var1, interactive = FALSE) # Run myrror to create myrror object. # clear_last_myrror_object()  # Clear the environment # rlang::env_has(.myrror_env, \"last_myrror_object\") # should return an error"},{"path":"https://giorgiacek.github.io/myrror/reference/compare_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compare type of variables of matched data frames. — compare_type","title":"Function to compare type of variables of matched data frames. — compare_type","text":"function compares types columns two data frames.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/compare_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compare type of variables of matched data frames. — compare_type","text":"","code":"compare_type(   dfx = NULL,   dfy = NULL,   myrror_object = NULL,   by = NULL,   by.x = NULL,   by.y = NULL,   output = c(\"full\", \"simple\", \"silent\"),   interactive = getOption(\"myrror.interactive\"),   verbose = getOption(\"myrror.verbose\") )"},{"path":"https://giorgiacek.github.io/myrror/reference/compare_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compare type of variables of matched data frames. — compare_type","text":"dfx non-empty data.frame. dfy non-empty data.frame. myrror_object myrror object create_myrror_object character, key used dfx dfy. .x character, key used dfx. .y character, key used dfy. output character: one \"full\" (returns myrror_object), \"simple\" (returns dataframe), \"silent\" (invisible object returned). interactive logical: TRUE, print S3 method myrror objects displays chunks. FALSE, everything printed . verbose logical: TRUE additional information displayed.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/compare_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compare type of variables of matched data frames. — compare_type","text":"myrror_object compare_type slot updated. data.table output = 'simple' selected.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/compare_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to compare type of variables of matched data frames. — compare_type","text":"","code":"# 1. Standard report, myrror_object output: compare_type(survey_data, survey_data_2, by=c('country', 'year')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>   # 2. Simple output, data.table output: compare_type(survey_data, survey_data_2, by=c('country', 'year'),              output = 'simple') #>     variable class_x class_y same_class #>       <char>  <char>  <char>     <lgcl> #> 1: variable1 numeric numeric       TRUE #> 2: variable2 numeric numeric       TRUE #> 3: variable3 numeric numeric       TRUE #> 4: variable4 numeric numeric       TRUE  # 3. Toggle interactvity: compare_type(survey_data, survey_data_2, by=c('country', 'year'),              interactive = FALSE) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>   # 4. Different keys (see also ?myrror): compare_type(survey_data, survey_data_2_cap,              by.x = c('country', 'year'), by.y = c('COUNTRY', 'YEAR')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2_cap with 16 rows and 6 columns. #> keys dfx: country and year. #> keys dfy: COUNTRY and YEAR. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2_cap: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2_cap: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>   # 5. Using existing myrror object created by myrror(): myrror(survey_data, survey_data_2, by=c('country', 'year')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report. compare_type() #> Last myrror object used for comparison. #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report."},{"path":"https://giorgiacek.github.io/myrror/reference/compare_type_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare type of variables, internal function. — compare_type_int","title":"Compare type of variables, internal function. — compare_type_int","text":"Compare type variables, internal function.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/compare_type_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare type of variables, internal function. — compare_type_int","text":"","code":"compare_type_int(myrror_object = NULL)"},{"path":"https://giorgiacek.github.io/myrror/reference/compare_type_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare type of variables, internal function. — compare_type_int","text":"myrror_object myrror object","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/compare_type_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare type of variables, internal function. — compare_type_int","text":"data.table object","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/compare_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to compare values of matched data frames. — compare_values","title":"Function to compare values of matched data frames. — compare_values","text":"Function compare values matched data frames.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/compare_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to compare values of matched data frames. — compare_values","text":"","code":"compare_values(   dfx = NULL,   dfy = NULL,   myrror_object = NULL,   by = NULL,   by.x = NULL,   by.y = NULL,   output = c(\"full\", \"simple\", \"silent\"),   interactive = getOption(\"myrror.interactive\"),   verbose = getOption(\"myrror.verbose\"),   tolerance = getOption(\"myrror.tolerance\") )"},{"path":"https://giorgiacek.github.io/myrror/reference/compare_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to compare values of matched data frames. — compare_values","text":"dfx non-empty data.frame. dfy non-empty data.frame. myrror_object myrror object create_myrror_object character, key used dfx dfy. .x character, key used dfx. .y character, key used dfy. output character: one \"full\" (returns myrror_object), \"simple\" (returns dataframe), \"silent\" (invisible object returned). interactive logical: TRUE, print S3 method myrror objects displays chunks. FALSE, everything printed . verbose logical: TRUE additional information displayed. tolerance numeric, default 1e-7.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/compare_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to compare values of matched data frames. — compare_values","text":"myrror_object compare_values slot updated. list data.tables output = 'simple' selected.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/compare_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to compare values of matched data frames. — compare_values","text":"","code":"# 1. Standard report, myrror_object output: compare_values(survey_data, survey_data_2, by=c('country', 'year')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>   # 2. Simple output, list of data.tables output: compare_values(survey_data, survey_data_2, by=c('country', 'year'),                output = 'simple') #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0  # 3. Toggle tolerance: compare_values(survey_data, survey_data_2, by=c('country', 'year'),                tolerance = 1e-5) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>   # 4. Toggle interactvity: compare_values(survey_data, survey_data_2, by=c('country', 'year'),                interactive = FALSE) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>   # 5. Different keys (see also ?myrror): compare_values(survey_data, survey_data_2_cap,                by.x = c('country', 'year'), by.y = c('COUNTRY', 'YEAR')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2_cap with 16 rows and 6 columns. #> keys dfx: country and year. #> keys dfy: COUNTRY and YEAR. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2_cap: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2_cap: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>   # 6. Using existing myrror object created by myrror(): myrror(survey_data, survey_data_2, by=c('country', 'year')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report. compare_values() #> Last myrror object used for comparison. #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report."},{"path":"https://giorgiacek.github.io/myrror/reference/create_myrror_object.html","id":null,"dir":"Reference","previous_headings":"","what":"myrror_object constructor (internal) — create_myrror_object","title":"myrror_object constructor (internal) — create_myrror_object","text":"myrror_object constructor (internal)","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/create_myrror_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"myrror_object constructor (internal) — create_myrror_object","text":"","code":"create_myrror_object(   dfx,   dfy,   by = NULL,   by.x = NULL,   by.y = NULL,   factor_to_char = TRUE,   verbose = getOption(\"myrror.verbose\"),   interactive = getOption(\"myrror.interactive\") )"},{"path":"https://giorgiacek.github.io/myrror/reference/create_myrror_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"myrror_object constructor (internal) — create_myrror_object","text":"dfx non-empty data.frame. dfy non-empty data.frame. character, key used dfx dfy. .x character, key used dfx. .y character, key used dfy. factor_to_char TRUE FALSE, default TRUE. verbose logical: TRUE additional information displayed. interactive logical: TRUE, print S3 method myrror objects displays chunks. FALSE, everything printed .","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/create_myrror_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"myrror_object constructor (internal) — create_myrror_object","text":"object class myrror_object.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/equal_with_tolerance.html","id":null,"dir":"Reference","previous_headings":"","what":"Are these two values equal with tolerance applied? This function is used to apply tolerance to the comparison of two numeric values. — equal_with_tolerance","title":"Are these two values equal with tolerance applied? This function is used to apply tolerance to the comparison of two numeric values. — equal_with_tolerance","text":"two values equal tolerance applied? function used apply tolerance comparison two numeric values.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/equal_with_tolerance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are these two values equal with tolerance applied? This function is used to apply tolerance to the comparison of two numeric values. — equal_with_tolerance","text":"","code":"equal_with_tolerance(x, y, tolerance = 1e-07)"},{"path":"https://giorgiacek.github.io/myrror/reference/equal_with_tolerance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are these two values equal with tolerance applied? This function is used to apply tolerance to the comparison of two numeric values. — equal_with_tolerance","text":"x numeric y numeric tolerance numeric","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/equal_with_tolerance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are these two values equal with tolerance applied? This function is used to apply tolerance to the comparison of two numeric values. — equal_with_tolerance","text":"logical","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Different Values - Internal — extract_diff_int","title":"Extract Different Values - Internal — extract_diff_int","text":"Extract Different Values - Internal","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Different Values - Internal — extract_diff_int","text":"","code":"extract_diff_int(myrror_object = NULL, tolerance = 1e-07)"},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Different Values - Internal — extract_diff_int","text":"myrror_object myrror object tolerance numeric, default 1e-7","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Different Values - Internal — extract_diff_int","text":"list two elements: diff_list diff_table","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Different Rows Function to extract missing or new rows from comparing two data frames. — extract_diff_rows","title":"Extract Different Rows Function to extract missing or new rows from comparing two data frames. — extract_diff_rows","text":"Extract Different Rows Function extract missing new rows comparing two data frames.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Different Rows Function to extract missing or new rows from comparing two data frames. — extract_diff_rows","text":"","code":"extract_diff_rows(   dfx = NULL,   dfy = NULL,   myrror_object = NULL,   by = NULL,   by.x = NULL,   by.y = NULL,   output = c(\"simple\", \"full\", \"silent\"),   tolerance = 1e-07,   verbose = getOption(\"myrror.verbose\"),   interactive = getOption(\"myrror.interactive\") )"},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Different Rows Function to extract missing or new rows from comparing two data frames. — extract_diff_rows","text":"dfx non-empty data.frame. dfy non-empty data.frame. myrror_object myrror object create_myrror_object character, key used dfx dfy. .x character, key used dfx. .y character, key used dfy. output character: one \"full\", \"simple\", \"silent\". tolerance numeric, default 1e-7. verbose logical: TRUE additional information displayed. interactive logical: TRUE, print S3 method myrror objects displays chunks. FALSE, everything printed .","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Different Rows Function to extract missing or new rows from comparing two data frames. — extract_diff_rows","text":"data.table object rows missing new.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Different Rows Function to extract missing or new rows from comparing two data frames. — extract_diff_rows","text":"","code":"# 1. Standard report, after running myrror() or compare_values(): myrror(survey_data, survey_data_2, by=c('country', 'year')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report. extract_diff_rows() #> Last myrror object used for comparison. #> NULL  # 2. Standard report, with new data: extract_diff_rows(survey_data, survey_data_2, by=c('country', 'year')) #> NULL   # 3. Toggle tolerance: extract_diff_rows(survey_data, survey_data_2, by=c('country', 'year'),                     tolerance = 1e-5) #> NULL"},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Different Values in Table Format Function to extract rows with different values between two data frames. — extract_diff_table","title":"Extract Different Values in Table Format Function to extract rows with different values between two data frames. — extract_diff_table","text":"Extract Different Values Table Format Function extract rows different values two data frames.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Different Values in Table Format Function to extract rows with different values between two data frames. — extract_diff_table","text":"","code":"extract_diff_table(   dfx = NULL,   dfy = NULL,   myrror_object = NULL,   by = NULL,   by.x = NULL,   by.y = NULL,   output = c(\"simple\", \"full\", \"silent\"),   tolerance = 1e-07,   verbose = getOption(\"myrror.verbose\"),   interactive = getOption(\"myrror.interactive\") )"},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Different Values in Table Format Function to extract rows with different values between two data frames. — extract_diff_table","text":"dfx non-empty data.frame. dfy non-empty data.frame. myrror_object myrror object create_myrror_object character, key used dfx dfy. .x character, key used dfx. .y character, key used dfy. output character: one \"full\", \"simple\", \"silent\". tolerance numeric, default 1e-7. verbose logical: TRUE additional information displayed. interactive logical: TRUE, print S3 method myrror objects displays chunks. FALSE, everything printed .","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Different Values in Table Format Function to extract rows with different values between two data frames. — extract_diff_table","text":"data.table object observations least 1 value different.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Different Values in Table Format Function to extract rows with different values between two data frames. — extract_diff_table","text":"","code":"# 1. Standard report, after running myrror() or compare_values(): myrror(survey_data, survey_data_2, by=c('country', 'year')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report. extract_diff_table() #> Last myrror object used for comparison. #>                diff  variable indexes country  year variable1.x variable1.y #>              <char>    <fctr>  <char>  <char> <int>       <num>       <num> #>  1: change_in_value variable2       1       A  2010 -0.56047565 -0.56047565 #>  2: change_in_value variable2       2       A  2011 -0.23017749 -0.23017749 #>  3: change_in_value variable2       3       A  2012  1.55870831  1.55870831 #>  4: change_in_value variable2       4       A  2013  0.07050839  0.07050839 #>  5: change_in_value variable2       5       A  2014  0.12928774  0.12928774 #>  6: change_in_value variable2       6       A  2015  1.71506499  1.71506499 #>  7: change_in_value variable2       7       A  2016  0.46091621  0.46091621 #>  8: change_in_value variable2       8       A  2017 -1.26506123 -1.26506123 #>  9: change_in_value variable2       9       B  2010 -0.68685285 -0.68685285 #> 10: change_in_value variable2      10       B  2011 -0.44566197 -0.44566197 #> 11: change_in_value variable2      11       B  2012  1.22408180  1.22408180 #> 12: change_in_value variable2      12       B  2013  0.35981383  0.35981383 #> 13: change_in_value variable2      13       B  2014  0.40077145  0.40077145 #> 14: change_in_value variable2      14       B  2015  0.11068272  0.11068272 #> 15: change_in_value variable2      15       B  2016 -0.55584113 -0.55584113 #> 16: change_in_value variable2      16       B  2017  1.78691314  1.78691314 #>     variable2.x variable2.y variable3.x variable3.y variable4.x variable4.y #>           <num>       <num>       <num>       <num>       <num>       <num> #>  1:   0.4978505 -1.07179123  0.89512566  0.89512566  0.77996512  0.77996512 #>  2:  -1.9666172  0.30352864  0.87813349  0.87813349 -0.08336907 -0.08336907 #>  3:   0.7013559  0.44820978  0.82158108  0.82158108  0.25331851  0.25331851 #>  4:  -0.4727914  0.05300423  0.68864025  0.68864025 -0.02854676 -0.02854676 #>  5:  -1.0678237  0.92226747  0.55391765  0.55391765 -0.04287046 -0.04287046 #>  6:  -0.2179749  2.05008469 -0.06191171 -0.06191171  1.36860228  1.36860228 #>  7:  -1.0260044 -0.49103117 -0.30596266 -0.30596266 -0.22577099 -0.22577099 #>  8:  -0.7288912 -2.30916888 -0.38047100 -0.38047100  1.51647060  1.51647060 #>  9:  -0.6250393  1.00573852 -0.69470698 -0.69470698 -1.54875280 -1.54875280 #> 10:  -1.6866933 -0.70920076 -0.20791728 -0.20791728  0.58461375  0.58461375 #> 11:   0.8377870 -0.68800862 -1.26539635 -1.26539635  0.12385424  0.12385424 #> 12:   0.1533731  1.02557137  2.16895597  2.16895597  0.21594157  0.21594157 #> 13:  -1.1381369 -0.28477301  1.20796200  1.20796200  0.37963948  0.37963948 #> 14:   1.2538149 -1.22071771 -1.12310858 -1.12310858 -0.50232345 -0.50232345 #> 15:   0.4264642  0.18130348 -0.40288484 -0.40288484 -0.33320738 -0.33320738 #> 16:  -0.2950715 -0.13889136 -0.46665535 -0.46665535 -1.01857538 -1.01857538  # 2. Standard report, with new data: extract_diff_table(survey_data, survey_data_2, by=c('country', 'year')) #>                diff  variable indexes country  year variable1.x variable1.y #>              <char>    <fctr>  <char>  <char> <int>       <num>       <num> #>  1: change_in_value variable2       1       A  2010 -0.56047565 -0.56047565 #>  2: change_in_value variable2       2       A  2011 -0.23017749 -0.23017749 #>  3: change_in_value variable2       3       A  2012  1.55870831  1.55870831 #>  4: change_in_value variable2       4       A  2013  0.07050839  0.07050839 #>  5: change_in_value variable2       5       A  2014  0.12928774  0.12928774 #>  6: change_in_value variable2       6       A  2015  1.71506499  1.71506499 #>  7: change_in_value variable2       7       A  2016  0.46091621  0.46091621 #>  8: change_in_value variable2       8       A  2017 -1.26506123 -1.26506123 #>  9: change_in_value variable2       9       B  2010 -0.68685285 -0.68685285 #> 10: change_in_value variable2      10       B  2011 -0.44566197 -0.44566197 #> 11: change_in_value variable2      11       B  2012  1.22408180  1.22408180 #> 12: change_in_value variable2      12       B  2013  0.35981383  0.35981383 #> 13: change_in_value variable2      13       B  2014  0.40077145  0.40077145 #> 14: change_in_value variable2      14       B  2015  0.11068272  0.11068272 #> 15: change_in_value variable2      15       B  2016 -0.55584113 -0.55584113 #> 16: change_in_value variable2      16       B  2017  1.78691314  1.78691314 #>     variable2.x variable2.y variable3.x variable3.y variable4.x variable4.y #>           <num>       <num>       <num>       <num>       <num>       <num> #>  1:   0.4978505 -1.07179123  0.89512566  0.89512566  0.77996512  0.77996512 #>  2:  -1.9666172  0.30352864  0.87813349  0.87813349 -0.08336907 -0.08336907 #>  3:   0.7013559  0.44820978  0.82158108  0.82158108  0.25331851  0.25331851 #>  4:  -0.4727914  0.05300423  0.68864025  0.68864025 -0.02854676 -0.02854676 #>  5:  -1.0678237  0.92226747  0.55391765  0.55391765 -0.04287046 -0.04287046 #>  6:  -0.2179749  2.05008469 -0.06191171 -0.06191171  1.36860228  1.36860228 #>  7:  -1.0260044 -0.49103117 -0.30596266 -0.30596266 -0.22577099 -0.22577099 #>  8:  -0.7288912 -2.30916888 -0.38047100 -0.38047100  1.51647060  1.51647060 #>  9:  -0.6250393  1.00573852 -0.69470698 -0.69470698 -1.54875280 -1.54875280 #> 10:  -1.6866933 -0.70920076 -0.20791728 -0.20791728  0.58461375  0.58461375 #> 11:   0.8377870 -0.68800862 -1.26539635 -1.26539635  0.12385424  0.12385424 #> 12:   0.1533731  1.02557137  2.16895597  2.16895597  0.21594157  0.21594157 #> 13:  -1.1381369 -0.28477301  1.20796200  1.20796200  0.37963948  0.37963948 #> 14:   1.2538149 -1.22071771 -1.12310858 -1.12310858 -0.50232345 -0.50232345 #> 15:   0.4264642  0.18130348 -0.40288484 -0.40288484 -0.33320738 -0.33320738 #> 16:  -0.2950715 -0.13889136 -0.46665535 -0.46665535 -1.01857538 -1.01857538  # 3. Toggle tolerance: extract_diff_table(survey_data, survey_data_2, by=c('country', 'year'),                     tolerance = 1e-5) #>                diff  variable indexes country  year variable1.x variable1.y #>              <char>    <fctr>  <char>  <char> <int>       <num>       <num> #>  1: change_in_value variable2       1       A  2010 -0.56047565 -0.56047565 #>  2: change_in_value variable2       2       A  2011 -0.23017749 -0.23017749 #>  3: change_in_value variable2       3       A  2012  1.55870831  1.55870831 #>  4: change_in_value variable2       4       A  2013  0.07050839  0.07050839 #>  5: change_in_value variable2       5       A  2014  0.12928774  0.12928774 #>  6: change_in_value variable2       6       A  2015  1.71506499  1.71506499 #>  7: change_in_value variable2       7       A  2016  0.46091621  0.46091621 #>  8: change_in_value variable2       8       A  2017 -1.26506123 -1.26506123 #>  9: change_in_value variable2       9       B  2010 -0.68685285 -0.68685285 #> 10: change_in_value variable2      10       B  2011 -0.44566197 -0.44566197 #> 11: change_in_value variable2      11       B  2012  1.22408180  1.22408180 #> 12: change_in_value variable2      12       B  2013  0.35981383  0.35981383 #> 13: change_in_value variable2      13       B  2014  0.40077145  0.40077145 #> 14: change_in_value variable2      14       B  2015  0.11068272  0.11068272 #> 15: change_in_value variable2      15       B  2016 -0.55584113 -0.55584113 #> 16: change_in_value variable2      16       B  2017  1.78691314  1.78691314 #>     variable2.x variable2.y variable3.x variable3.y variable4.x variable4.y #>           <num>       <num>       <num>       <num>       <num>       <num> #>  1:   0.4978505 -1.07179123  0.89512566  0.89512566  0.77996512  0.77996512 #>  2:  -1.9666172  0.30352864  0.87813349  0.87813349 -0.08336907 -0.08336907 #>  3:   0.7013559  0.44820978  0.82158108  0.82158108  0.25331851  0.25331851 #>  4:  -0.4727914  0.05300423  0.68864025  0.68864025 -0.02854676 -0.02854676 #>  5:  -1.0678237  0.92226747  0.55391765  0.55391765 -0.04287046 -0.04287046 #>  6:  -0.2179749  2.05008469 -0.06191171 -0.06191171  1.36860228  1.36860228 #>  7:  -1.0260044 -0.49103117 -0.30596266 -0.30596266 -0.22577099 -0.22577099 #>  8:  -0.7288912 -2.30916888 -0.38047100 -0.38047100  1.51647060  1.51647060 #>  9:  -0.6250393  1.00573852 -0.69470698 -0.69470698 -1.54875280 -1.54875280 #> 10:  -1.6866933 -0.70920076 -0.20791728 -0.20791728  0.58461375  0.58461375 #> 11:   0.8377870 -0.68800862 -1.26539635 -1.26539635  0.12385424  0.12385424 #> 12:   0.1533731  1.02557137  2.16895597  2.16895597  0.21594157  0.21594157 #> 13:  -1.1381369 -0.28477301  1.20796200  1.20796200  0.37963948  0.37963948 #> 14:   1.2538149 -1.22071771 -1.12310858 -1.12310858 -0.50232345 -0.50232345 #> 15:   0.4264642  0.18130348 -0.40288484 -0.40288484 -0.33320738 -0.33320738 #> 16:  -0.2950715 -0.13889136 -0.46665535 -0.46665535 -1.01857538 -1.01857538"},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Different Values Function to extract rows with different values between two data frames. — extract_diff_values","title":"Extract Different Values Function to extract rows with different values between two data frames. — extract_diff_values","text":"Extract Different Values Function extract rows different values two data frames.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Different Values Function to extract rows with different values between two data frames. — extract_diff_values","text":"","code":"extract_diff_values(   dfx = NULL,   dfy = NULL,   myrror_object = NULL,   by = NULL,   by.x = NULL,   by.y = NULL,   output = c(\"simple\", \"full\", \"silent\"),   tolerance = 1e-07,   verbose = getOption(\"myrror.verbose\"),   interactive = getOption(\"myrror.interactive\") )"},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Different Values Function to extract rows with different values between two data frames. — extract_diff_values","text":"dfx non-empty data.frame. dfy non-empty data.frame. myrror_object myrror object create_myrror_object character, key used dfx dfy. .x character, key used dfx. .y character, key used dfy. output character: one \"full\", \"simple\", \"silent\". tolerance numeric, default 1e-7. verbose logical: TRUE additional information displayed. interactive logical: TRUE, print S3 method myrror objects displays chunks. FALSE, everything printed .","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Different Values Function to extract rows with different values between two data frames. — extract_diff_values","text":"list object two items: diff_list diff_table","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/extract_diff_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Different Values Function to extract rows with different values between two data frames. — extract_diff_values","text":"","code":"# 1. Standard report, after running myrror() or compare_values(): myrror(survey_data, survey_data_2, by=c('country', 'year')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report. extract_diff_values() #> Last myrror object used for comparison. #> $variable2 #>                diff indexes country  year variable2.x variable2.y #>              <char>  <char>  <char> <int>       <num>       <num> #>  1: change_in_value       1       A  2010   0.4978505 -1.07179123 #>  2: change_in_value       2       A  2011  -1.9666172  0.30352864 #>  3: change_in_value       3       A  2012   0.7013559  0.44820978 #>  4: change_in_value       4       A  2013  -0.4727914  0.05300423 #>  5: change_in_value       5       A  2014  -1.0678237  0.92226747 #>  6: change_in_value       6       A  2015  -0.2179749  2.05008469 #>  7: change_in_value       7       A  2016  -1.0260044 -0.49103117 #>  8: change_in_value       8       A  2017  -0.7288912 -2.30916888 #>  9: change_in_value       9       B  2010  -0.6250393  1.00573852 #> 10: change_in_value      10       B  2011  -1.6866933 -0.70920076 #> 11: change_in_value      11       B  2012   0.8377870 -0.68800862 #> 12: change_in_value      12       B  2013   0.1533731  1.02557137 #> 13: change_in_value      13       B  2014  -1.1381369 -0.28477301 #> 14: change_in_value      14       B  2015   1.2538149 -1.22071771 #> 15: change_in_value      15       B  2016   0.4264642  0.18130348 #> 16: change_in_value      16       B  2017  -0.2950715 -0.13889136 #>   # 2. Standard report, with new data: extract_diff_values(survey_data, survey_data_2, by=c('country', 'year')) #> $variable2 #>                diff indexes country  year variable2.x variable2.y #>              <char>  <char>  <char> <int>       <num>       <num> #>  1: change_in_value       1       A  2010   0.4978505 -1.07179123 #>  2: change_in_value       2       A  2011  -1.9666172  0.30352864 #>  3: change_in_value       3       A  2012   0.7013559  0.44820978 #>  4: change_in_value       4       A  2013  -0.4727914  0.05300423 #>  5: change_in_value       5       A  2014  -1.0678237  0.92226747 #>  6: change_in_value       6       A  2015  -0.2179749  2.05008469 #>  7: change_in_value       7       A  2016  -1.0260044 -0.49103117 #>  8: change_in_value       8       A  2017  -0.7288912 -2.30916888 #>  9: change_in_value       9       B  2010  -0.6250393  1.00573852 #> 10: change_in_value      10       B  2011  -1.6866933 -0.70920076 #> 11: change_in_value      11       B  2012   0.8377870 -0.68800862 #> 12: change_in_value      12       B  2013   0.1533731  1.02557137 #> 13: change_in_value      13       B  2014  -1.1381369 -0.28477301 #> 14: change_in_value      14       B  2015   1.2538149 -1.22071771 #> 15: change_in_value      15       B  2016   0.4264642  0.18130348 #> 16: change_in_value      16       B  2017  -0.2950715 -0.13889136 #>   # 3. Toggle tolerance: extract_diff_values(survey_data, survey_data_2, by=c('country', 'year'),                     tolerance = 1e-5) #> $variable2 #>                diff indexes country  year variable2.x variable2.y #>              <char>  <char>  <char> <int>       <num>       <num> #>  1: change_in_value       1       A  2010   0.4978505 -1.07179123 #>  2: change_in_value       2       A  2011  -1.9666172  0.30352864 #>  3: change_in_value       3       A  2012   0.7013559  0.44820978 #>  4: change_in_value       4       A  2013  -0.4727914  0.05300423 #>  5: change_in_value       5       A  2014  -1.0678237  0.92226747 #>  6: change_in_value       6       A  2015  -0.2179749  2.05008469 #>  7: change_in_value       7       A  2016  -1.0260044 -0.49103117 #>  8: change_in_value       8       A  2017  -0.7288912 -2.30916888 #>  9: change_in_value       9       B  2010  -0.6250393  1.00573852 #> 10: change_in_value      10       B  2011  -1.6866933 -0.70920076 #> 11: change_in_value      11       B  2012   0.8377870 -0.68800862 #> 12: change_in_value      12       B  2013   0.1533731  1.02557137 #> 13: change_in_value      13       B  2014  -1.1381369 -0.28477301 #> 14: change_in_value      14       B  2015   1.2538149 -1.22071771 #> 15: change_in_value      15       B  2016   0.4264642  0.18130348 #> 16: change_in_value      16       B  2017  -0.2950715 -0.13889136 #>"},{"path":"https://giorgiacek.github.io/myrror/reference/get_correct_myrror_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Get correct myrror object. Internal function. — get_correct_myrror_object","title":"Get correct myrror object. Internal function. — get_correct_myrror_object","text":"checks arguments parsed parent function. myrror_object found, used. , checks databases NULL. looks last myrror object. nothing available, error. Finally, checks availability datasets. available, create myrror_object","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/get_correct_myrror_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get correct myrror object. Internal function. — get_correct_myrror_object","text":"","code":"get_correct_myrror_object(   myrror_object,   dfx,   dfy,   by,   by.x,   by.y,   verbose,   interactive,   ... )"},{"path":"https://giorgiacek.github.io/myrror/reference/get_correct_myrror_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get correct myrror object. Internal function. — get_correct_myrror_object","text":"dfx non-empty data.frame. dfy non-empty data.frame. character, key used dfx dfy. .x character, key used dfx. .y character, key used dfy. verbose logical: TRUE additional information displayed. interactive logical: TRUE, print S3 method myrror objects displays chunks. FALSE, everything printed . ... arguments parsed parent function.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/get_correct_myrror_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get correct myrror object. Internal function. — get_correct_myrror_object","text":"myrror object","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/get_df_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of a data frame. Internal function. — get_df_name","title":"Get the name of a data frame. Internal function. — get_df_name","text":"function gets name data frame. Internal function. data frame name attribute, returns . Otherwise, returns deparse original call.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/get_df_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of a data frame. Internal function. — get_df_name","text":"","code":"get_df_name(df, original_call)"},{"path":"https://giorgiacek.github.io/myrror/reference/get_df_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of a data frame. Internal function. — get_df_name","text":"df data.frame original_call original call (df)","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/get_df_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of a data frame. Internal function. — get_df_name","text":"character","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/get_keys_or_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Get keys or default. A simple function wrapper which returns 'rn' (row names) if the data.table has no keys. — get_keys_or_default","title":"Get keys or default. A simple function wrapper which returns 'rn' (row names) if the data.table has no keys. — get_keys_or_default","text":"Get keys default. simple function wrapper returns 'rn' (row names) data.table keys.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/get_keys_or_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get keys or default. A simple function wrapper which returns 'rn' (row names) if the data.table has no keys. — get_keys_or_default","text":"","code":"get_keys_or_default(keys, default = \"rn\")"},{"path":"https://giorgiacek.github.io/myrror/reference/get_keys_or_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get keys or default. A simple function wrapper which returns 'rn' (row names) if the data.table has no keys. — get_keys_or_default","text":"keys character vector default character","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/get_keys_or_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get keys or default. A simple function wrapper which returns 'rn' (row names) if the data.table has no keys. — get_keys_or_default","text":"character","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var1.html","id":null,"dir":"Reference","previous_headings":"","what":"Iris Dataset Variation 1 — iris_var1","title":"Iris Dataset Variation 1 — iris_var1","text":"dataset variation includes: Additional rows duplicating first 5 rows. new column Petal.Area calculated Petal.Length Petal.Width. Introduction NA values Sepal.Length.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iris Dataset Variation 1 — iris_var1","text":"","code":"iris_var1"},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Iris Dataset Variation 1 — iris_var1","text":"data.frame 155 rows 6 variables: Sepal.Length Numeric, Sepal length cm, NA values. Sepal.Width Numeric, Sepal width cm. Petal.Length Numeric, Petal length cm. Petal.Width Numeric, Petal width cm. Species Factor levels: \"setosa\",\"versicolor\",\"virginica\". Petal.Area Numeric, calculated Petal.Length * Petal.Width.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Iris Dataset Variation 1 — iris_var1","text":"Modified iris dataset.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Iris Dataset Variation 1 — iris_var1","text":"tests handling extended datasets, new calculated fields, missing values.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var2.html","id":null,"dir":"Reference","previous_headings":"","what":"Iris Dataset Variation 2 — iris_var2","title":"Iris Dataset Variation 2 — iris_var2","text":"dataset variation includes: NaN values Sepal.Width column. Random adjustments Sepal.Length create range different values. shuffled order rows test comparison without reliance row order.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iris Dataset Variation 2 — iris_var2","text":"","code":"iris_var2"},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Iris Dataset Variation 2 — iris_var2","text":"data frame 150 rows 5 variables, row order shuffled: Sepal.Length Numeric, Sepal length cm, modified adding random values. Sepal.Width Numeric, Sepal width cm, NaN values. Petal.Length Numeric, Petal length cm. Petal.Width Numeric, Petal width cm. Species Factor levels: \"setosa\",\"versicolor\",\"virginica\".","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Iris Dataset Variation 2 — iris_var2","text":"Modified iris dataset.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Iris Dataset Variation 2 — iris_var2","text":"designed test handling NaN values, comparison numeric differences, insensitivity row order.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var3.html","id":null,"dir":"Reference","previous_headings":"","what":"Iris Dataset Variation 3 — iris_var3","title":"Iris Dataset Variation 3 — iris_var3","text":"dataset variation includes: Column name changes (e.g., Sepal.Length SL). Conversion numeric character type Sepal.Length (now SL) column. NA value introduced SL column.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iris Dataset Variation 3 — iris_var3","text":"","code":"iris_var3"},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Iris Dataset Variation 3 — iris_var3","text":"data.frame 150 rows 5 variables: SL Character, originally numeric, one NA value. SW Numeric, Sepal width cm. PL Numeric, Petal length cm. PW Numeric, Petal width cm. Species Factor levels: \"setosa\",\"versicolor\",\"virginica\".","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Iris Dataset Variation 3 — iris_var3","text":"Modified iris dataset.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Iris Dataset Variation 3 — iris_var3","text":"variation tests package's ability correctly identify handle column renaming, type conversion, missing values.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var4.html","id":null,"dir":"Reference","previous_headings":"","what":"Iris Dataset Variation 4 — iris_var4","title":"Iris Dataset Variation 4 — iris_var4","text":"dataset variation includes: Uppercase transformation Species factor levels. Duplicated rows (first 10 rows repeated). altered scale Petal.Width (values multiplied 10).","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iris Dataset Variation 4 — iris_var4","text":"","code":"iris_var4"},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Iris Dataset Variation 4 — iris_var4","text":"data.frame 160 rows 5 variables: Sepal.Length Numeric, length cm. Sepal.Width Numeric, width cm. Petal.Length Numeric, length cm. Petal.Width Numeric, width cm, values scaled factor 10. Species Factor levels modified uppercase: \"SETOSA\", \"VERSICOLOR\", \"VIRGINICA\".","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Iris Dataset Variation 4 — iris_var4","text":"Modified iris dataset.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var4.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Iris Dataset Variation 4 — iris_var4","text":"Designed test handling categorical variable level modifications, duplicate rows, numeric scale adjustments.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var5.html","id":null,"dir":"Reference","previous_headings":"","what":"Iris Dataset Variation 5 — iris_var5","title":"Iris Dataset Variation 5 — iris_var5","text":"dataset variation includes: Column different type: Sepal.Length (character). Column different values: Sepal.Length (1 modified value).","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iris Dataset Variation 5 — iris_var5","text":"","code":"iris_var5"},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Iris Dataset Variation 5 — iris_var5","text":"data.frame 160 rows 5 variables: Sepal.Length Charactert, length cm. Sepal.Width Numeric, width cm. Petal.Length Numeric, length cm. Petal.Width Numeric, Petal width cm. Species Factor levels: \"setosa\",\"versicolor\",\"virginica\".","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var5.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Iris Dataset Variation 5 — iris_var5","text":"Modified iris dataset.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var6.html","id":null,"dir":"Reference","previous_headings":"","what":"Iris Dataset Variation 6 — iris_var6","title":"Iris Dataset Variation 6 — iris_var6","text":"Iris Dataset Variation 6","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iris Dataset Variation 6 — iris_var6","text":"","code":"iris_var6"},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Iris Dataset Variation 6 — iris_var6","text":"data.frame 146 rows 5 variables: Sepal.Length Numeric, Sepal length cm. Sepal.Width Numeric, Sepal width cm. Petal.Length Numeric, Petal length cm. Petal.Width Numeric, Petal width cm. Species Factor levels: \"setosa\",\"versicolor\",\"virginica\".","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var6.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Iris Dataset Variation 6 — iris_var6","text":"Modified iris dataset.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var7.html","id":null,"dir":"Reference","previous_headings":"","what":"Iris Dataset Variation 7 — iris_var7","title":"Iris Dataset Variation 7 — iris_var7","text":"Iris Dataset Variation 7","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iris Dataset Variation 7 — iris_var7","text":"","code":"iris_var7"},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var7.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Iris Dataset Variation 7 — iris_var7","text":"data.frame 146 rows 5 variables: Sepal.Length Numeric, Sepal length cm. Sepal.Width Numeric, Sepal width cm. Petal.Length Numeric, Petal length cm. Petal.Width Numeric, Petal width cm. Species Factor levels: \"setosa\",\"versicolor\",\"virginica\".","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/iris_var7.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Iris Dataset Variation 7 — iris_var7","text":"Modified iris dataset.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/my_menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Menu wrapper. Internal function. — my_menu","title":"Menu wrapper. Internal function. — my_menu","text":"function wrapper around base R menu function. used provide consistent interface menu function.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/my_menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Menu wrapper. Internal function. — my_menu","text":"","code":"my_menu(...)"},{"path":"https://giorgiacek.github.io/myrror/reference/my_menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Menu wrapper. Internal function. — my_menu","text":"... arguments passed menu function.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/my_menu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Menu wrapper. Internal function. — my_menu","text":"menu","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/my_readline.html","id":null,"dir":"Reference","previous_headings":"","what":"Readline wrapper. Internal function. — my_readline","title":"Readline wrapper. Internal function. — my_readline","text":"function wrapper around base R readline function. used provide consistent interface readline function.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/my_readline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Readline wrapper. Internal function. — my_readline","text":"","code":"my_readline(...)"},{"path":"https://giorgiacek.github.io/myrror/reference/my_readline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Readline wrapper. Internal function. — my_readline","text":"... arguments passed readline function.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/my_readline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Readline wrapper. Internal function. — my_readline","text":"readline","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/myrror-package.html","id":null,"dir":"Reference","previous_headings":"","what":"myrror: Compare two Data Frames and Summarize Differences — myrror-package","title":"myrror: Compare two Data Frames and Summarize Differences — myrror-package","text":"Convenience functions compare two dataframes, explore, visualize summarize similarities differences.","code":""},{"path":[]},{"path":"https://giorgiacek.github.io/myrror/reference/myrror-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"myrror: Compare two Data Frames and Summarize Differences — myrror-package","text":"Maintainer: Giorgia Cecchinato gcecchinato@worldbank.org","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/myrror.html","id":null,"dir":"Reference","previous_headings":"","what":"myrror main function — myrror","title":"myrror main function — myrror","text":"myrror main function","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/myrror.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"myrror main function — myrror","text":"","code":"myrror(   dfx,   dfy,   by = NULL,   by.x = NULL,   by.y = NULL,   compare_type = TRUE,   compare_values = TRUE,   extract_diff_values = TRUE,   factor_to_char = TRUE,   interactive = getOption(\"myrror.interactive\"),   verbose = getOption(\"myrror.verbose\"),   tolerance = getOption(\"myrror.tolerance\") )"},{"path":"https://giorgiacek.github.io/myrror/reference/myrror.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"myrror main function — myrror","text":"dfx non-empty data.frame. dfy non-empty data.frame. character, key used dfx dfy. .x character, key used dfx. .y character, key used dfy. compare_type TRUE FALSE, default TRUE. compare_values TRUE FALSE, default TRUE. extract_diff_values TRUE FALSE, default TRUE. factor_to_char TRUE FALSE, default TRUE. interactive logical: TRUE, print S3 method myrror objects displays chunks. FALSE, everything printed . verbose logical: TRUE, print messages. tolerance numeric, default 1e-7.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/myrror.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"myrror main function — myrror","text":"Object class myrror_object. comparison report two datasets.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/myrror.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"myrror main function — myrror","text":"","code":"# 1. Specifying by, by.x or by.y: myrror(survey_data, survey_data_2, by=c('country', 'year')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report.  ## These are equivalent: myrror(survey_data, survey_data_2_cap, by.x=c('country', 'year'), by.y = c('COUNTRY', 'YEAR')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2_cap with 16 rows and 6 columns. #> keys dfx: country and year. #> keys dfy: COUNTRY and YEAR. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2_cap: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2_cap: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report. myrror(survey_data, survey_data_2_cap, by=c('country' = 'COUNTRY', 'year' = 'YEAR')) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2_cap with 16 rows and 6 columns. #> keys dfx: country and year. #> keys dfy: COUNTRY and YEAR. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2_cap: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2_cap: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report.  # 2. Turn off interactivity: myrror(survey_data, survey_data_2, by=c('country', 'year'), interactive = FALSE) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report.  # 3. Turn off factor_to_char (it will treat factors as factors): myrror(survey_data, survey_data_2, by=c('country', 'year'), factor_to_char = FALSE) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report.  # 4. Turn off compare_type: myrror(survey_data, survey_data_2, by=c('country', 'year'), compare_type = FALSE) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report. ## Same can be done for compare_values and extract_diff_values.  # 5. Set tolerance: myrror(survey_data, survey_data_2, by=c('country', 'year'), tolerance = 1e-5) #>  #> ── Myrror Report ─────────────────────────────────────────────────────────────── #>  #> ── General Information: ── #>  #> dfx: survey_data with 16 rows and 6 columns. #> dfy: survey_data_2 with 16 rows and 6 columns. #> keys: country and year. #>  #> ── Note: comparison is done for shared columns and rows. ── #>  #> ✔ Total shared columns (no keys): 4 #> ! Non-shared columns in survey_data: 0 () #> ! Non-shared columns in survey_data_2: 0 () #>  #> ✔ Total shared rows: 16 #> ! Non-shared rows in survey_data: 0. #> ! Non-shared rows in survey_data_2: 0. #>  #> ✔ There are no missing or new rows. #>  #> ── 1. Shared Columns Class Comparison ────────────────────────────────────────── #>  #> ✔ All shared columns have the same class. #>  #>  #> ── 2. Shared Columns Values Comparison ───────────────────────────────────────── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: character-numeric comparison is allowed. #>  #>  #> ── Overview: ── #>  #> # A tibble: 1 × 4 #>   variable  change_in_value na_to_value value_to_na #>   <fct>               <int>       <int>       <int> #> 1 variable2              16           0           0 #>  #>  #>  #> ── Value comparison: ── #>  #> ! 1 shared column(s) have different value(s): #> ℹ Note: Only first 5 rows shown for each variable. #>  #> ── \"variable2\"  #>               diff indexes country  year variable2.x variable2.y #>             <char>  <char>  <char> <int>       <num>       <num> #> 1: change_in_value       1       A  2010   0.4978505 -1.07179123 #> 2: change_in_value       2       A  2011  -1.9666172  0.30352864 #> 3: change_in_value       3       A  2012   0.7013559  0.44820978 #> 4: change_in_value       4       A  2013  -0.4727914  0.05300423 #> 5: change_in_value       5       A  2014  -1.0678237  0.92226747 #> ... #>  #> ℹ Note: run `extract_diff_values()` or `extract_diff_table()` to access the results in list or table format. #>  #> ✔ End of Myrror Report."},{"path":"https://giorgiacek.github.io/myrror/reference/pair_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"is_dataframe_sorted_by(iris, by = ","title":"is_dataframe_sorted_by(iris, by = ","text":"Pairs columns prepares comparison.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/pair_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_dataframe_sorted_by(iris, by = ","text":"","code":"pair_columns(merged_data_report, suffix_x = \".x\", suffix_y = \".y\")"},{"path":"https://giorgiacek.github.io/myrror/reference/pair_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_dataframe_sorted_by(iris, by = ","text":"merged_data_report joined prepared_dfx prepared_dfy. suffix_x suffix dfx (default .x) suffix_y suffix dfy (default .y)","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/pair_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_dataframe_sorted_by(iris, by = ","text":"paired_columns","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/pair_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_dataframe_sorted_by(iris, by = ","text":"","code":"# mo <- create_myrror_object(iris, iris_var1) # pair_columns(mo$merged_data_report)"},{"path":"https://giorgiacek.github.io/myrror/reference/prepare_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares dataset for joyn::joyn(). Internal function. — prepare_df","title":"Prepares dataset for joyn::joyn(). Internal function. — prepare_df","text":"Prepares dataset joyn::joyn(). Internal function.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/prepare_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares dataset for joyn::joyn(). Internal function. — prepare_df","text":"","code":"prepare_df(   df,   by = NULL,   factor_to_char = TRUE,   interactive = getOption(\"myrror.interactive\"),   verbose = getOption(\"myrror.verbose\") )"},{"path":"https://giorgiacek.github.io/myrror/reference/prepare_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares dataset for joyn::joyn(). Internal function. — prepare_df","text":"df data.frame data.table character vector factor_to_char logical interactive logical verbose logical","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/prepare_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepares dataset for joyn::joyn(). Internal function. — prepare_df","text":"","code":"# dataset <- data.frame(a = 1:10, b = letters[1:10]) # prepare_df(dataset, by = \"a\")"},{"path":"https://giorgiacek.github.io/myrror/reference/print.myrror.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for Myrror object. — print.myrror","title":"Print method for Myrror object. — print.myrror","text":"Print method Myrror object.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/print.myrror.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for Myrror object. — print.myrror","text":"","code":"# S3 method for class 'myrror' print(x, ...)"},{"path":"https://giorgiacek.github.io/myrror/reference/print.myrror.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for Myrror object. — print.myrror","text":"x object class 'myrror_object' ... additional arguments","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/suggested_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggested keys/ids — suggested_ids","title":"Suggested keys/ids — suggested_ids","text":"Suggested keys/ids","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/suggested_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggested keys/ids — suggested_ids","text":"","code":"suggested_ids(df)"},{"path":"https://giorgiacek.github.io/myrror/reference/suggested_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggested keys/ids — suggested_ids","text":"df data.frame","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/suggested_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggested keys/ids — suggested_ids","text":"list suggested keys/ids (first option first combo)","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data A country-year level dataset with 15 rows and 6 variables. 2 countries, 4 years, and 4 additional variables. — survey_data","title":"Survey Data A country-year level dataset with 15 rows and 6 variables. 2 countries, 4 years, and 4 additional variables. — survey_data","text":"Survey Data country-year level dataset 15 rows 6 variables. 2 countries, 4 years, 4 additional variables.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data A country-year level dataset with 15 rows and 6 variables. 2 countries, 4 years, and 4 additional variables. — survey_data","text":"","code":"survey_data"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data A country-year level dataset with 15 rows and 6 variables. 2 countries, 4 years, and 4 additional variables. — survey_data","text":"data.table 16 rows 4 variables: country Factor levels: \"\", \"B\". year Numeric, values: 2010, 2011, 2012, 2013. variable1 Numeric. variable2 Numeric. variable3 Numeric. variable4 Numeric. @source Simulated data.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_1m.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data 1:m Variation 1 — survey_data_1m","title":"Survey Data 1:m Variation 1 — survey_data_1m","text":"Survey Data 1:m Variation 1","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_1m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data 1:m Variation 1 — survey_data_1m","text":"","code":"survey_data_1m"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_1m.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data 1:m Variation 1 — survey_data_1m","text":"data.table 36 rows 6 variables: country Factor levels: \"\", \"B\". year Numeric, values: 2010-2017. variable1 Numeric. variable2 Numeric. variable3 Numeric. variable4 Numeric.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_1m.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey Data 1:m Variation 1 — survey_data_1m","text":"Variation survey_data non-unique ids 1:m relationship ids values.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_1m_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data 1:m Variation 2 — survey_data_1m_2","title":"Survey Data 1:m Variation 2 — survey_data_1m_2","text":"Survey Data 1:m Variation 2","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_1m_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data 1:m Variation 2 — survey_data_1m_2","text":"","code":"survey_data_1m_2"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_1m_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data 1:m Variation 2 — survey_data_1m_2","text":"data.table 36 rows 6 variables: country Factor levels: \"\", \"B\". year Numeric, values: 2010-2017. variable1 Numeric. variable2 Numeric. variable3 Numeric. variable4 Numeric.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_1m_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey Data 1:m Variation 2 — survey_data_1m_2","text":"Variation survey_data non-unique ids 1:m relationship ids values.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data Variation 2 — survey_data_2","title":"Survey Data Variation 2 — survey_data_2","text":"Survey Data Variation 2","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data Variation 2 — survey_data_2","text":"","code":"survey_data_2"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data Variation 2 — survey_data_2","text":"data.table 15 rows 6 variables: country Factor levels: \"\", \"B\". year Numeric, values: 2010, 2011, 2012, 2013. variable1 Numeric. variable2 Numeric. Modified variable values. variable3 Numeric. variable4 Numeric.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey Data Variation 2 — survey_data_2","text":"Simulated data.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_2_cap.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data Variation 2 with Cap Keys — survey_data_2_cap","title":"Survey Data Variation 2 with Cap Keys — survey_data_2_cap","text":"Survey Data Variation 2 Cap Keys","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_2_cap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data Variation 2 with Cap Keys — survey_data_2_cap","text":"","code":"survey_data_2_cap"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_2_cap.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data Variation 2 with Cap Keys — survey_data_2_cap","text":"data.table 15 rows 6 variables: country Factor levels: \"\", \"B\". year Numeric, values: 2010, 2011, 2012, 2013. variable1 Numeric. variable2 Numeric. Modified variable values. variable3 Numeric. variable4 Numeric.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_2_cap.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey Data Variation 2 with Cap Keys — survey_data_2_cap","text":"Simulated data.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data Variation 3 — survey_data_3","title":"Survey Data Variation 3 — survey_data_3","text":"Survey Data Variation 3","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data Variation 3 — survey_data_3","text":"","code":"survey_data_3"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data Variation 3 — survey_data_3","text":"data.table 15 rows 6 variables: country Factor levels: \"\", \"B\". year Numeric, values: 2010-2017. variable1 Character. Modified variable class. variable2 Numeric. variable3 Numeric. variable4 Numeric.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey Data Variation 3 — survey_data_3","text":"Simulated data.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data Variation 4 — survey_data_4","title":"Survey Data Variation 4 — survey_data_4","text":"Survey Data Variation 4","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data Variation 4 — survey_data_4","text":"","code":"survey_data_4"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data Variation 4 — survey_data_4","text":"data.table 12 rows (4 missing) 6 variables: country Factor levels: \"\", \"B\". year Numeric, values: 2010-2017. variable1 Numeric. variable2 Numeric. variable3 Numeric. variable4 Numeric.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey Data Variation 4 — survey_data_4","text":"Simulated data.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_5.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data Variation 5 — survey_data_5","title":"Survey Data Variation 5 — survey_data_5","text":"Survey Data Variation 5","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data Variation 5 — survey_data_5","text":"","code":"survey_data_5"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data Variation 5 — survey_data_5","text":"data.table 15 rows 4 variables (2 missing): country Factor levels: \"\", \"B\". year Numeric, values: 2010-2017. variable1 Numeric. variable2 Numeric. variable3 Numeric. variable4 Numeric.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_5.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey Data Variation 5 — survey_data_5","text":"Simulated data.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_6.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data Variation 6 — survey_data_6","title":"Survey Data Variation 6 — survey_data_6","text":"Survey Data Variation 6","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data Variation 6 — survey_data_6","text":"","code":"survey_data_6"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data Variation 6 — survey_data_6","text":"data.table 15+15 (duplicated) rows 4 variables: country Factor levels: \"\", \"B\". year Numeric, values: 2010-2017. variable1 Numeric. variable2 Numeric. variable3 Numeric. variable4 Numeric.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_6.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey Data Variation 6 — survey_data_6","text":"Simulated data.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data Variation All — survey_data_all","title":"Survey Data Variation All — survey_data_all","text":"Survey Data Variation ","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data Variation All — survey_data_all","text":"","code":"survey_data_all"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_all.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data Variation All — survey_data_all","text":"data.table 12 rows 6 variables: country Factor levels: \"\", \"B\". year Numeric, values: 2010-2017. variable1 Numeric. variable2 Numeric. variable3 Numeric.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_all.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey Data Variation All — survey_data_all","text":"Simulated data.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_m1.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey Data m:1 — survey_data_m1","title":"Survey Data m:1 — survey_data_m1","text":"Survey Data m:1","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_m1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey Data m:1 — survey_data_m1","text":"","code":"survey_data_m1"},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_m1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey Data m:1 — survey_data_m1","text":"data.table 15 rows 6 variables: country Factor levels: \"\", \"B\". year Numeric, values: 2010-2017. variable1 Numeric. variable2 Numeric. variable3 Numeric. variable4 Numeric.","code":""},{"path":"https://giorgiacek.github.io/myrror/reference/survey_data_m1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Survey Data m:1 — survey_data_m1","text":"Variation survey_data non-unique ids m:1 relationship ids values.","code":""}]
